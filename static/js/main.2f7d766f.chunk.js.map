{"version":3,"sources":["components/editor/Editor.js","components/previewer/Previewer.js","state/action-creators/actions.js","App.js","reportWebVitals.js","state/reducers/contentReducer.js","state/reducers/reducers.js","state/store.js","index.js"],"names":["connect","state","content","dispatch","onChangeContent","e","action","type","payload","target","value","props","id","defaultValue","onChange","Previewer","marked","setOptions","breaks","langPrefix","highlight","code","hljs","highlightAuto","dangerouslySetInnerHTML","__html","changeContent","App","useSelector","useDispatch","bindActionCreators","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","contentReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA0BeA,eAfS,SAACC,GACvB,MAAO,CACLC,QAASD,EAAMC,YAIQ,SAACC,GAC1B,MAAO,CACLC,gBAAiB,SAACC,GAChB,IAAMC,EAAS,CAACC,KAAM,gBAAiBC,QAASH,EAAEI,OAAOC,OACzDP,EAASG,OAKAN,EAvBA,SAACW,GACd,OACE,8BACA,0BAAUC,GAAG,SAASC,aAAcF,EAAMV,MAAMC,QAASY,SAAUH,EAAMP,uB,0CCFhEW,EAAY,SAACJ,GAUxB,OARAK,IAAOC,WAAW,CAChBC,QAAQ,EACRC,WAAY,iBACZC,UAAW,SAASC,GAClB,OAAOC,IAAKC,cAAcF,GAAMX,SAKlC,qBAAKE,GAAG,UAAUY,wBAAyB,CAAEC,OAAQT,IAAOL,EAAMV,MAAMC,a,OCf/DwB,EAAgB,SAACxB,GAC5B,OAAO,SAACC,GACNA,EAAS,CACPI,KAAM,gBACNC,QAASN,MCgBAyB,MAbf,WACE,IAAM1B,EAAQ2B,aAAa,SAAC3B,GAAD,OAAWA,KAChCE,EAAW0B,cAGjB,OAFAC,YAAmBJ,EAAevB,GAGhC,sBAAK4B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQ9B,MAAOA,IACf,cAAC,EAAD,CAAWA,MAAOA,QCHT+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCPRQ,EAAY,ypCAsDHC,EATQ,WAAmC,IAAlCzC,EAAiC,uDAAzBwC,EAAcnC,EAAW,uCACvD,MACO,kBADAA,EAAOC,KAEKD,EAAOE,QAEfP,GC3CE0C,EAJEC,YAAgB,CAC/B1C,QAASwC,I,QCAEG,EAAQC,YACnBH,EACA,GACAI,YAAgBC,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BrB,K","file":"static/js/main.2f7d766f.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport './Editor.scss';\n\nconst Editor = (props) =>{\n  return(\n    <div>\n    <textarea id=\"editor\" defaultValue={props.state.content} onChange={props.onChangeContent}></textarea>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    content: state.content\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChangeContent: (e) => {\n      const action = {type: 'CHANGECONTENT', payload: e.target.value};\n      dispatch(action);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\n","import marked from 'marked';\nimport './Previewer.scss';\nimport hljs from 'highlight.js';\n\nexport const Previewer = (props) => {\n  \n  marked.setOptions({\n    breaks: true,\n    langPrefix: \"hljs language-\",\n    highlight: function(code) {\n      return hljs.highlightAuto(code).value;\n    }\n  });\n  \n  return(\n    <div id='preview' dangerouslySetInnerHTML={{ __html: marked(props.state.content) }}></div>\n  )\n}","export const changeContent = (content) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'CHANGECONTENT',\n      payload: content\n    })\n  }\n}","import './App.css';\nimport Editor from './components/editor/Editor'; \nimport { Previewer } from './components/previewer/Previewer';\nimport { useSelector, useDispatch } from 'react-redux'; \nimport { bindActionCreators } from 'redux';\nimport { changeContent } from './state/action-creators/actions';\n\nfunction App() {\n  const state = useSelector( (state) => state);\n  const dispatch = useDispatch();\n  bindActionCreators(changeContent, dispatch);\n  \n  return (\n    <div className=\"App\">\n      <Editor state={state} />\n      <Previewer state={state} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nconst contentReducer = (state = initialState, action) => {\n  switch(action.type){\n    case 'CHANGECONTENT':\n      return state = action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default contentReducer;","import { combineReducers } from \"redux\";\nimport contentReducer from \"./contentReducer\";\n\nconst reducers = combineReducers({\n  content: contentReducer\n});\n\nexport default reducers;","import { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers/reducers';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(\n  reducers,\n  {},\n  applyMiddleware(thunk)\n\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './state/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}